"""initial migration with final schema

Revision ID: 5449d2b942f6
Revises:
Create Date: 2025-09-22 20:28:14.427172

"""

from collections.abc import Sequence

import sqlalchemy as sa
from alembic import op

# revision identifiers, used by Alembic.
revision: str = "5449d2b942f6"
down_revision: str | Sequence[str] | None = None
branch_labels: str | Sequence[str] | None = None
depends_on: str | Sequence[str] | None = None


def upgrade() -> None:
    """Upgrade schema."""
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table(
        "rulesets",
        sa.Column("id", sa.Integer(), nullable=False),
        sa.Column("name", sa.String(length=150), nullable=False),
        sa.Column("slug", sa.String(length=100), nullable=False),
        sa.Column("description", sa.Text(), nullable=True),
        sa.Column("base_ruleset_id", sa.Integer(), nullable=True),
        sa.Column("created_at", sa.DateTime(), server_default=sa.text("(CURRENT_TIMESTAMP)"), nullable=True),
        sa.Column("updated_at", sa.DateTime(), server_default=sa.text("(CURRENT_TIMESTAMP)"), nullable=True),
        sa.Column("created_by", sa.String(length=150), nullable=False),
        sa.Column("last_update_by", sa.String(length=150), nullable=False),
        sa.ForeignKeyConstraint(
            ["base_ruleset_id"],
            ["rulesets.id"],
        ),
        sa.PrimaryKeyConstraint("id"),
        sa.UniqueConstraint("name"),
    )
    op.create_table(
        "rules",
        sa.Column("id", sa.Integer(), nullable=False),
        sa.Column("tags", sa.JSON(), nullable=True),
        sa.Column("translations", sa.JSON(), nullable=False),
        sa.Column("slug", sa.String(length=100), nullable=False),
        sa.Column("changes_description", sa.Text(), nullable=True),
        sa.Column("is_official", sa.Boolean(), nullable=True),
        sa.Column("ruleset_id", sa.Integer(), nullable=False),
        sa.Column("base_rule_id", sa.Integer(), nullable=True),
        sa.Column("created_at", sa.DateTime(), server_default=sa.text("(CURRENT_TIMESTAMP)"), nullable=True),
        sa.Column("updated_at", sa.DateTime(), server_default=sa.text("(CURRENT_TIMESTAMP)"), nullable=True),
        sa.Column("created_by", sa.String(length=150), nullable=False),
        sa.Column("last_update_by", sa.String(length=150), nullable=False),
        sa.ForeignKeyConstraint(
            ["base_rule_id"],
            ["rules.id"],
        ),
        sa.ForeignKeyConstraint(
            ["ruleset_id"],
            ["rulesets.id"],
        ),
        sa.PrimaryKeyConstraint("id"),
    )
    with op.batch_alter_table("rules", schema=None) as batch_op:
        batch_op.create_index(batch_op.f("ix_rules_id"), ["id"], unique=False)

    # ### end Alembic commands ###


def downgrade() -> None:
    """Downgrade schema."""
    # ### commands auto generated by Alembic - please adjust! ###
    with op.batch_alter_table("rules", schema=None) as batch_op:
        batch_op.drop_index(batch_op.f("ix_rules_id"))

    op.drop_table("rules")
    op.drop_table("rulesets")
    # ### end Alembic commands ###
