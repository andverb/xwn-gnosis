services:
    postgres:
      image: postgres:18
      environment:
        POSTGRES_DB: gnosis_db
        POSTGRES_USER: gnosis_user
        POSTGRES_PASSWORD: dev_password
      ports:
        - "5432:5432"
      volumes:
        - postgres_data:/var/lib/postgresql/data
      healthcheck:
        test: ["CMD-SHELL", "pg_isready -U gnosis_user -d gnosis_db"]
        interval: 10s
        timeout: 5s
        retries: 5

    app:
      build: .
      ports:
        - "8000:8000"
      environment:
        GNOSIS_DATABASE_URL: postgresql+asyncpg://gnosis_user:dev_password@postgres:5432/gnosis_db
#        GNOSIS_API_KEY: dev-secret-key
      depends_on:
        postgres:
          condition: service_healthy
      command: >
        sh -c "uv run alembic upgrade head &&
               uv run fastapi dev --host 0.0.0.0 app/main.py"
      volumes:
        # Selective mounting - only mount source code, not .venv or other build artifacts
        - ./app:/code/app                           # Source code
        - ./app/templates:/code/app/templates       # Templates for live reload
        - ./app/static:/code/app/static             # Static files for live reload
        - ./pyproject.toml:/code/pyproject.toml     # Dependencies file
        - ./alembic.ini:/code/alembic.ini           # Alembic config
        - ./migrations:/code/migrations             # Database migrations
        # Don't mount: .venv, .git, __pycache__, etc.

volumes:
    postgres_data: